package exercise05.pkg7;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * Class for Form to allow user to find all Stock Items
 *
 * @author Mary Cronin 0510661,  Adrian O'Sullivan 16230124
 */
public class FrmStockItemFind extends javax.swing.JInternalFrame {

    StockItemCollection stockCollection;

    /**
     * Creates new form FrmFindStockItem
     */
    public FrmStockItemFind() {
        initComponents();
        try {
            stockCollection = new StockItemCollection();

            PopulateTable();
        } catch (ApplicationException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Problem", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * Method to Populate table with stockItem details
     */
    private void PopulateTable() {
        DefaultTableModel model = (DefaultTableModel) tblStockItem.getModel();
        for (int i = model.getRowCount() - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        stockCollection.moveToHeadLocation();
        while (stockCollection.moveToNextStockItem()) {
            StockItem stockItem = stockCollection.getCurrentStockItem();
            model.addRow(new Object[]{stockItem.getPartNumber(),
                stockItem.getName(),
                stockItem.getDescription(),
                stockItem.getUnitPrice(),
                stockItem.getStockItemId()
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblStockItem = new javax.swing.JTable();
        btnEdit = new javax.swing.JButton();
        btnSort = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();

        tblStockItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Part Number", "Stock Name", "Description", "Unit Price", "ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblStockItem);

        btnEdit.setBackground(new java.awt.Color(255, 153, 102));
        btnEdit.setText("EDIT");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnSort.setBackground(new java.awt.Color(102, 102, 255));
        btnSort.setText("Sort By Part Number");
        btnSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(255, 51, 51));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(76, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 614, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addComponent(btnDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnEdit)
                .addGap(134, 134, 134)
                .addComponent(btnSort)
                .addGap(67, 67, 67))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEdit)
                    .addComponent(btnSort)
                    .addComponent(btnDelete))
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Handle sort event
     *
     * @param evt Event Action
     */
    private void btnSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortActionPerformed
        stockCollection.BubbleSort();
        PopulateTable();

    }//GEN-LAST:event_btnSortActionPerformed

    /**
     * Method to perform Edit Action linked to Edit Button on Form
     *
     * @param evt Event Action
     */
    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        {
            int selectedStockItemId = 0;
            try {
                int row = tblStockItem.getSelectedRow();
                String selectedId = tblStockItem.getModel().getValueAt(row, 4).toString();
                selectedStockItemId = Integer.parseInt(selectedId);
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Please Select a Row", "Problem", JOptionPane.ERROR_MESSAGE);
                return;
            } catch (ArrayIndexOutOfBoundsException ex) {
                JOptionPane.showMessageDialog(null, "Please Select a Row", "Problem", JOptionPane.ERROR_MESSAGE);
                return;
            }
            int row = tblStockItem.getSelectedRow();
            String selectedId = tblStockItem.getModel().getValueAt(row, 4).toString();
            selectedStockItemId = Integer.parseInt(selectedId);

            FrmMain frmMain = (FrmMain) this.getTopLevelAncestor();
            frmMain.EditStockItem(selectedStockItemId);

        }

    }//GEN-LAST:event_btnEditActionPerformed

    /**
     * Method to perform Delete Action linked to Delete Button on Form
     *
     * @param evt Event Action
     */
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int response = JOptionPane.showConfirmDialog(null, "Are you sure you wish to delete this Stock Item?", "Confirm",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (response == JOptionPane.YES_OPTION) {
            int column = 0;
            int row = tblStockItem.getSelectedRow();
            String selectedId = tblStockItem.getModel().getValueAt(row, 4).toString();
            int selectedStockItemId = Integer.parseInt(selectedId);
            try {
                stockCollection.deleteStockItem(selectedStockItemId);
                stockCollection.saveStockItem(0);
                PopulateTable();
                JOptionPane.showMessageDialog(null, "Entry Deleted", "Sucess", JOptionPane.INFORMATION_MESSAGE);
            } catch (ApplicationException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage(), "Problem", JOptionPane.ERROR_MESSAGE);
            }

        }
    }//GEN-LAST:event_btnDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnSort;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblStockItem;
    // End of variables declaration//GEN-END:variables
}
